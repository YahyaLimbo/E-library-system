DROP TABLE IF EXISTS MATERIAL_LOANS CASCADE;
DROP TABLE IF EXISTS ROOM_PARTECIPANT CASCADE;
DROP TABLE IF EXISTS READING_ROOM CASCADE;
DROP TABLE IF EXISTS MATERIAL CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;


CREATE TABLE USERS (
    USERID SERIAL PRIMARY KEY,
    username VARCHAR(20) NOT NULL UNIQUE,
    password VARCHAR(20) NOT NULL,
    email VARCHAR(30) NOT NULL UNIQUE,
    role VARCHAR(10) NOT NULL CHECK (role IN ('admin', 'user'))
);

CREATE TABLE MATERIAL (
    MATERIALID INT PRIMARY KEY,
    TYPE VARCHAR(50) NOT NULL CHECK (TYPE IN (
        'book', 'journal', 'magazine', 'newspaper', 'researchpaper',
        'Magazine', 'Thesis', 'ConferencePaper', 'Referencematerial',
        'database', 'Archive', 'dataset', 'audioBook'
    )),
    TITLE VARCHAR(100) NOT NULL,
    AUTHOR VARCHAR(50) NOT NULL,
    SUMMARY TEXT NOT NULL,
    DATE_PUBLISHED DATE NOT NULL,
    PUBLISHER VARCHAR(50) NOT NULL,
    CONTRIBUTORS VARCHAR(100),
    FORMAT VARCHAR(20) NOT NULL CHECK (FORMAT IN ('print', 'digital', 'audiobook')),
    LANGUAGE VARCHAR(20) NOT NULL,
    IDENTIFIER VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE READING_ROOM (
    IDROOM SERIAL PRIMARY KEY,
    room_name VARCHAR(50) NOT NULL UNIQUE,
    materialid INT NOT NULL,
    createdby INT NOT NULL,
    roomstatus BOOLEAN NOT NULL DEFAULT TRUE,
    date_scheduled DATE NOT NULL,
    FOREIGN KEY (materialid) REFERENCES MATERIAL(MATERIALID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (createdby) REFERENCES USERS(USERID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE ROOM_PARTECIPANT (
    partecipant_id SERIAL PRIMARY KEY,
    IDROOM INT NOT NULL,
    USERID INT NOT NULL,
    HOSTROOM BOOLEAN NOT NULL DEFAULT FALSE,
    MUTED BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (IDROOM) REFERENCES READING_ROOM(IDROOM) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (USERID) REFERENCES USERS(USERID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MATERIAL_LOANS (
    LOANID SERIAL PRIMARY KEY,
    USERID INT NOT NULL,
    MATERIALID INT NOT NULL,
    BORROW_DATE DATE NOT NULL,
    DUE_DATE DATE NOT NULL,
    RETURN_DATE DATE NOT NULL,
    FOREIGN KEY (USERID) REFERENCES USERS(USERID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (MATERIALID) REFERENCES MATERIAL(MATERIALID) ON DELETE CASCADE ON UPDATE CASCADE
);
